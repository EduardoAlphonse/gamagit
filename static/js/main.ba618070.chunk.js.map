{"version":3,"sources":["components/UserCard/index.tsx","services/githubApi/index.ts","pages/Home/index.tsx","components/RepositoryCard/index.tsx","pages/User/index.tsx","App.tsx","index.tsx"],"names":["UserCard","image","username","className","src","alt","api","axios","create","baseURL","headers","Home","useState","input","setInput","users","setUsers","event","a","preventDefault","get","data","newUsers","items","map","item","id","avatar_url","login","onSubmit","type","placeholder","onChange","target","value","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","length","user","to","RepositoryCard","children","name","updated_at","language","html_url","clone_url","homepage","slice","split","year","month","day","User","setUser","repositories","setRepositories","useParams","useEffect","newUser","public_repos","public_gists","following","followers","newRepositories","repo","description","repository","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAOO,SAASA,EAAT,GAAuD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SACjC,OACC,sBAAKC,UAAU,YAAf,UACC,mCACC,wBACA,qBAAKC,IAAKH,EAAOI,IAAKH,OAEvB,qBAAKC,UAAU,YAAf,SACC,mBAAGA,UAAU,WAAb,SAAyBD,S,YCbhBI,E,OAAMC,EAAMC,OAAO,CAC/BC,QAAS,yBACTC,QAAS,CACR,OAAU,oC,MCOL,SAASC,IAAQ,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEIF,mBAAyB,IAF7B,mBAEfG,EAFe,KAERC,EAFQ,iDAQtB,WAA0BC,GAA1B,mBAAAC,EAAA,6DACCD,EAAME,iBADP,SAGwBb,EAAIc,IAAJ,0BAA2BP,IAHnD,gBAGSQ,EAHT,EAGSA,KACFC,EAA2BD,EAAKE,MAAMC,KAAI,SAACC,GAChD,MAAO,CACNC,GAAID,EAAKC,GACTzB,MAAOwB,EAAKE,WACZzB,SAAUuB,EAAKG,UAIjBZ,EAASM,GAZV,4CARsB,sBAuBtB,OACC,qBAAKI,GAAG,iBAAR,SACC,sBAAKA,GAAG,eAAR,UACC,wBAAQvB,UAAU,gBAAlB,SACC,qBAAKA,UAAU,QAAf,SACC,uBAAM0B,SA5BW,4CA4BjB,UACC,uBAAOC,KAAK,OAAOC,YAAY,kBAAkBC,SAzBvD,SAAqBf,GACpBH,EAASG,EAAMgB,OAAOC,UA0BjB,wBAAQJ,KAAK,SAAb,SACC,qBAAKK,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACC,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,mgBAAmgBJ,KAAMzB,EAAQ,UAAY,uBAO/kBE,EAAM4B,OACN,sBAAMxC,UAAU,uBAAhB,SACEY,EAAMS,KAAI,SAAAoB,GAAI,OACd,cAAC,IAAD,CACCC,GAAE,gBAAWD,EAAK1C,UADnB,SAIC,cAACF,EAAD,CACCC,MAAO2C,EAAK3C,MACZC,SAAU0C,EAAK1C,YAJX0C,EAAKlB,SAUb,sBAAMvB,UAAU,gBAAhB,SACC,gCACC,qBAAKgC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACC,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,4IAA4IJ,KAAK,cAGhM,2E,MC3DA,SAASQ,EAAT,GAQkB,IAPxBC,EAOuB,EAPvBA,SACAC,EAMuB,EANvBA,KACAC,EAKuB,EALvBA,WACAC,EAIuB,EAJvBA,SAIuB,KAHvBC,SAGuB,EAFvBC,UAEuB,EADvBC,SAE2BJ,EAAWK,MAAM,EAAG,IAAIC,MAAM,MADlC,mBAChBC,EADgB,KACVC,EADU,KACHC,EADG,KAGvB,OACC,sBAAKvD,UAAU,4BAAf,UACC,sBAAKA,UAAU,OAAf,UACC,6BAAK6C,IACL,mBAAG7C,UAAU,cAAb,SACE4C,IAEF,oBAAG5C,UAAU,SAAb,0CAA0C,sBAAMA,UAAU,OAAhB,mBAA2BuD,EAA3B,YAAkCD,EAAlC,YAA2CD,QACpFN,GACA,sBAAM/C,UAAU,MAAhB,SACE+C,OAKJ,mCACC,wBAAQ/C,UAAU,oBAAlB,uBAGA,wBAAQA,UAAU,oBAAlB,uBAGA,wBAAQA,UAAU,oBAAlB,6B,MCZG,SAASwD,IAAQ,IAAD,EACE/C,mBAAuB,IADzB,mBACfgC,EADe,KACTgB,EADS,OAEkBhD,mBAAuB,IAFzC,mBAEfiD,EAFe,KAEDC,EAFC,KAGd5D,EAAa6D,cAAb7D,SAyCR,OAvCA8D,qBAAU,YACT,uCAAC,gCAAA9C,EAAA,sEACuBZ,EAAIc,IAAJ,iBAAkBlB,IADzC,gBACQmB,EADR,EACQA,KAEF4C,EAAwB,CAC7BhE,MAAOoB,EAAKM,WACZzB,WACA8C,KAAM3B,EAAK2B,KACXkB,aAAc7C,EAAK6C,aACnBC,aAAc9C,EAAK8C,aACnBC,UAAW/C,EAAK+C,UAChBC,UAAWhD,EAAKgD,WAGjBT,EAAQK,GAbR,2CAAD,yDAeE,CAAC/D,IAEJ8D,qBAAU,YACT,uCAAC,gCAAA9C,EAAA,sEACuBZ,EAAIc,IAAJ,iBAAkBlB,EAAlB,qCADvB,gBACQmB,EADR,EACQA,KAEFiD,EAAgCjD,EAAKG,KAAI,SAAC+C,GAC/C,MAAO,CACN7C,GAAI6C,EAAK7C,GACTsB,KAAMuB,EAAKvB,KACXwB,YAAaD,EAAKC,YAClBvB,WAAYsB,EAAKtB,WACjBC,SAAUqB,EAAKrB,SACfG,SAAUkB,EAAKlB,SACfD,UAAWmB,EAAKnB,UAChBD,SAAUoB,EAAKpB,aAIjBW,EAAgBQ,GAhBhB,2CAAD,yDAkBE,CAACpE,IAGH,qBAAKwB,GAAG,iBAAR,SACC,sBAAKA,GAAG,eAAR,UACC,yBAAQvB,UAAU,cAAlB,UACC,sBAAKA,UAAU,iBAAf,UACC,cAACH,EAAD,CACCC,MAAO2C,EAAK3C,MACZC,SAAU0C,EAAK1C,WAEhB,sBAAKC,UAAU,OAAf,UACC,kDAAiB,sBAAMA,UAAU,OAAhB,SAAwByC,EAAKsB,kBAC9C,wCAAU,sBAAM/D,UAAU,OAAhB,SAAwByC,EAAKuB,kBACvC,4CAAc,sBAAMhE,UAAU,OAAhB,SAAwByC,EAAKyB,eAC3C,4CAAc,sBAAMlE,UAAU,OAAhB,SAAwByC,EAAKwB,qBAI7C,qBAAKjE,UAAU,UAAf,SACC,cAAC,IAAD,CAAMA,UAAU,cAAc0C,GAAG,IAAjC,SACC,qBAAKV,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACC,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,4IAA4IJ,KAAK,qBAMnM,yBAASnC,UAAU,eAAnB,SACE0D,EAAarC,KAAI,SAAAiD,GAAU,OAC3B,cAAC3B,EAAD,CAECE,KAAMyB,EAAWzB,KACjBC,WAAYwB,EAAWxB,WACvBC,SAAUuB,EAAWvB,SACrBC,SAAUsB,EAAWtB,SACrBC,UAAWqB,EAAWrB,UACtBC,SAAUoB,EAAWpB,SAPtB,SASEoB,EAAWD,aARPC,EAAW/C,c,MCxFRgD,MAbf,WACE,OACE,cAAC,IAAD,CACEC,SAAS,WADX,SAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnE,IACjC,cAAC,IAAD,CAAOkE,KAAK,kBAAkBC,UAAWnB,U,MCRjDoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba618070.chunk.js","sourcesContent":["import './styles.scss';\r\n\r\ntype UserCardProps = {\r\n\timage: string;\r\n\tusername: string;\r\n}\r\n\r\nexport function UserCard({ image, username }: UserCardProps) {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<header>\r\n\t\t\t\t<div />\r\n\t\t\t\t<img src={image} alt={username} />\r\n\t\t\t</header>\r\n\t\t\t<div className='user-info'>\r\n\t\t\t\t<p className=\"username\">{username}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n\tbaseURL: 'https://api.github.com',\r\n\theaders: {\r\n\t\t'Accept': 'application/vnd.github.v3+json',\r\n\t},\r\n});","import { useState, ChangeEvent, FormEvent } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { UserCard } from '../../components/UserCard';\r\nimport { api } from '../../services/githubApi';\r\nimport './styles.scss'\r\n\r\ntype UserCardType = {\r\n\tid: number;\r\n\timage: string;\r\n\tusername: string;\r\n}\r\n\r\nexport function Home() {\r\n\tconst [input, setInput] = useState('');\r\n\tconst [users, setUsers] = useState<UserCardType[]>([]);\r\n\r\n\tfunction handleInput(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tsetInput(event.target.value);\r\n\t}\r\n\r\n\tasync function searchUser(event: FormEvent) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { data } = await api.get(`/search/users?q=${input}`);\r\n\t\tconst newUsers: UserCardType[] = data.items.map((item: any): UserCardType => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item.id,\r\n\t\t\t\timage: item.avatar_url,\r\n\t\t\t\tusername: item.login,\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetUsers(newUsers);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id='page-container'>\r\n\t\t\t<div id='page-content'>\r\n\t\t\t\t<header className='search-header'>\r\n\t\t\t\t\t<div className=\"input\">\r\n\t\t\t\t\t\t<form onSubmit={searchUser}>\r\n\t\t\t\t\t\t\t<input type='text' placeholder='github_username' onChange={handleInput} />\r\n\r\n\t\t\t\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t\t\t\t<svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.2541 3.64642C6.60481 3.64642 3.64645 6.60479 3.64645 10.2541C3.64645 13.9034 6.60481 16.8618 10.2541 16.8618C13.9035 16.8618 16.8618 13.9034 16.8618 10.2541C16.8618 6.60479 13.9035 3.64642 10.2541 3.64642ZM1.64645 10.2541C1.64645 5.50022 5.50024 1.64642 10.2541 1.64642C15.008 1.64642 18.8618 5.50022 18.8618 10.2541C18.8618 12.2708 18.1683 14.1254 17.0068 15.5927L23.3536 21.9394L21.9393 23.3536L15.5926 17.0069C14.1254 18.1683 12.2707 18.8618 10.2541 18.8618C5.50024 18.8618 1.64645 15.008 1.64645 10.2541Z\" fill={input ? '#C03C6C' : '#B2B2B2'} />\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t{users.length ? (\r\n\t\t\t\t\t<main className='user-cards-container'>\r\n\t\t\t\t\t\t{users.map(user => (\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={`/user/${user.username}`}\r\n\t\t\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<UserCard\r\n\t\t\t\t\t\t\t\t\timage={user.image}\r\n\t\t\t\t\t\t\t\t\tusername={user.username}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</main>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<main className=\"empty-content\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.5101 1.79291L2.51008 11.7929V13.2071L12.5101 23.2071L13.9243 21.7929L5.6314 13.5H22.4899V11.5H5.6314L13.9243 3.20712L12.5101 1.79291Z\" fill=\"#333333\" />\r\n\t\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t\tComece procurando um usuário\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { ReactNode } from 'react'\r\n\r\nimport './styles.scss'\r\n\r\ntype RepositoryCardProps = {\r\n\tchildren: ReactNode\r\n\tname: string;\r\n\tupdated_at: string;\r\n\tlanguage: string | null;\r\n\thomepage: string | null;\r\n\tclone_url: string;\r\n\thtml_url: string;\r\n}\r\n\r\nexport function RepositoryCard({\r\n\tchildren,\r\n\tname,\r\n\tupdated_at,\r\n\tlanguage,\r\n\thtml_url,\r\n\tclone_url,\r\n\thomepage,\r\n}: RepositoryCardProps) {\r\n\tconst [year, month, day] = updated_at.slice(0, 10).split('-');\r\n\r\n\treturn (\r\n\t\t<div className='repository-card-container'>\r\n\t\t\t<div className=\"body\">\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p className='description'>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='update'>Última atualização: <span className='data'>{`${day}/${month}/${year}`}</span></p>\r\n\t\t\t\t{language && (\r\n\t\t\t\t\t<span className='tag'>\r\n\t\t\t\t\t\t{language}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<button className='repository-button'>\r\n\t\t\t\t\tView Repo\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='repository-button'>\r\n\t\t\t\t\tView Repo\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='repository-button'>\r\n\t\t\t\t\tView Repo\r\n\t\t\t\t</button>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t)\r\n}","import { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { UserCard } from '../../components/UserCard';\r\nimport { RepositoryCard } from '../../components/RepositoryCard';\r\n\r\nimport { api } from '../../services/githubApi';\r\n\r\nimport './styles.scss'\r\n\r\ntype UserInfoCard = {\r\n\timage: string;\r\n\tusername: string;\r\n\tname: string;\r\n\tpublic_repos: number;\r\n\tpublic_gists: number;\r\n\tfollowers: number;\r\n\tfollowing: number;\r\n}\r\n\r\ntype Repository = {\r\n\tid: number;\r\n\tname: string;\r\n\tdescription: string | null;\r\n\tupdated_at: string;\r\n\tlanguage: string | null;\r\n\thomepage: string | null;\r\n\tclone_url: string;\r\n\thtml_url: string;\r\n}\r\n\r\ntype ParamsProps = {\r\n\tusername: string;\r\n}\r\n\r\nexport function User() {\r\n\tconst [user, setUser] = useState<UserInfoCard>({} as UserInfoCard);\r\n\tconst [repositories, setRepositories] = useState<Repository[]>([]);\r\n\tconst { username } = useParams<ParamsProps>();\r\n\r\n\tuseEffect(() => {\r\n\t\t(async function getUser() {\r\n\t\t\tconst { data } = await api.get(`/users/${username}`);\r\n\r\n\t\t\tconst newUser: UserInfoCard = {\r\n\t\t\t\timage: data.avatar_url,\r\n\t\t\t\tusername,\r\n\t\t\t\tname: data.name,\r\n\t\t\t\tpublic_repos: data.public_repos,\r\n\t\t\t\tpublic_gists: data.public_gists,\r\n\t\t\t\tfollowing: data.following,\r\n\t\t\t\tfollowers: data.followers,\r\n\t\t\t}\r\n\r\n\t\t\tsetUser(newUser);\r\n\t\t})();\r\n\t}, [username]);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async function getRepositories() {\r\n\t\t\tconst { data } = await api.get(`/users/${username}/repos?per_page=100&sort=updated`);\r\n\r\n\t\t\tconst newRepositories: Repository[] = data.map((repo: any) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: repo.id,\r\n\t\t\t\t\tname: repo.name,\r\n\t\t\t\t\tdescription: repo.description,\r\n\t\t\t\t\tupdated_at: repo.updated_at,\r\n\t\t\t\t\tlanguage: repo.language,\r\n\t\t\t\t\thomepage: repo.homepage,\r\n\t\t\t\t\tclone_url: repo.clone_url,\r\n\t\t\t\t\thtml_url: repo.html_url,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetRepositories(newRepositories);\r\n\t\t})();\r\n\t}, [username]);\r\n\r\n\treturn (\r\n\t\t<div id=\"page-container\">\r\n\t\t\t<div id=\"page-content\">\r\n\t\t\t\t<header className='user-header'>\r\n\t\t\t\t\t<div className=\"user-info-card\">\r\n\t\t\t\t\t\t<UserCard\r\n\t\t\t\t\t\t\timage={user.image}\r\n\t\t\t\t\t\t\tusername={user.username}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t\t<p>repositórios: <span className=\"data\">{user.public_repos}</span></p>\r\n\t\t\t\t\t\t\t<p>gists: <span className=\"data\">{user.public_gists}</span></p>\r\n\t\t\t\t\t\t\t<p>followers: <span className=\"data\">{user.followers}</span></p>\r\n\t\t\t\t\t\t\t<p>following: <span className=\"data\">{user.following}</span></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"options\">\r\n\t\t\t\t\t\t<Link className='back-button' to='/'>\r\n\t\t\t\t\t\t\t<svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12.5101 1.79291L2.51008 11.7929V13.2071L12.5101 23.2071L13.9243 21.7929L5.6314 13.5H22.4899V11.5H5.6314L13.9243 3.20712L12.5101 1.79291Z\" fill=\"#333333\" />\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t<section className=\"repositories\">\r\n\t\t\t\t\t{repositories.map(repository => (\r\n\t\t\t\t\t\t<RepositoryCard\r\n\t\t\t\t\t\t\tkey={repository.id}\r\n\t\t\t\t\t\t\tname={repository.name}\r\n\t\t\t\t\t\t\tupdated_at={repository.updated_at}\r\n\t\t\t\t\t\t\tlanguage={repository.language}\r\n\t\t\t\t\t\t\thtml_url={repository.html_url}\r\n\t\t\t\t\t\t\tclone_url={repository.clone_url}\r\n\t\t\t\t\t\t\thomepage={repository.homepage}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{repository.description}\r\n\t\t\t\t\t\t</RepositoryCard>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { Home } from './pages/Home';\nimport { User } from './pages/User';\n\nimport './styles/app.scss';\n\nfunction App() {\n  return (\n    <BrowserRouter\n      basename='/gamagit'\n    >\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/user/:username' component={User} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}